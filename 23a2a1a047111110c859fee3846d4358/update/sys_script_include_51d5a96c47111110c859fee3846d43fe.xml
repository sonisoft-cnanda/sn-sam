<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_807586_sam_scrip.SamPublisherCalculatorIBM</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>SamPublisherCalculatorIBM</name>
        <script><![CDATA[var SamPublisherCalculatorIBM = Class.create();
SamPublisherCalculatorIBM.prototype = Object.extendsObject(SamPublisherCalculator, {
	initialize: function(reconEngine, coreCompanyId) {
		SamPublisherCalculator.prototype.initialize.call(this, reconEngine, coreCompanyId);
		this.fisSAMPIbmActive = GlidePluginManager.isActive('com.sn_samp_ibm');
	},

	prepare: function() {
		SamPublisherCalculator.prototype.prepare.call(this);
		if (this.fisSAMPIbmActive) {
			this.markComponentsAsReconciled();
			if (GlideApplicationProperty.getValue('com.snc.samp.ibm.use_samp_ibm_licensing') === 'true') {
				this.markAllProductsAsNotReconciled();
				this.markClassifiedComponentsAsReconciled();
			}
		}
	},

	markAllProductsAsNotReconciled: function () {
		// Cleanup Product Records
		var productGr = SAMPremiumUtils
			.getGlideMultipleUpdate(ReconciliationConstants.IBM_PRODUCT_USAGE_TABLE);
		productGr.setValue('is_reconciled', false);
		productGr.setValue('unlicensed_product', true);
		productGr.setValue('license_metric_result', '');
		productGr.setValue('software_model_result', '');
		productGr.setValue('product_result', '');
		productGr.setValue('software_model', '');
		productGr.setForceChunking(true);
		productGr.setWithThrottler(true);
		productGr.execute();
	},

	markComponentsAsReconciled: function() {
		var installGr = new GlideRecord('samp_ilmt_sw_install');
		installGr.addNotNullQuery('product_install');
		this.reconcileIgnoredInstalls(installGr);
	},

	markClassifiedComponentsAsReconciled: function() {
		var installs = [];
		var classificationGr = new GlideRecord('ibm_sw_classification');
		classificationGr.addNotNullQuery('classified_product');
		classificationGr.addNotNullQuery('component_install');
		classificationGr.query();
		while (classificationGr.next()) {
			installs.push(classificationGr.getValue('component_install'));
			if (installs.length >= ReconciliationConstants.BATCHSIZE) {
				this.reconcileClassifiedInstalls(installs);
				installs = [];
			}
		}
		this.reconcileClassifiedInstalls(installs);
	},

	reconcileClassifiedInstalls: function(installs) {
		if (installs.length === 0) {
			return;
		}
		var swInstalls = new GlideRecord(ReconciliationConstants.LICENSABLE_SOFTWARE_INSTALL_TABLE);
		swInstalls.addQuery('sys_id', installs);
		swInstalls.setValue('unlicensed_install', false);
		swInstalls.setValue('is_reconciled', true);
		swInstalls.setWorkflow(false);
		swInstalls.updateMultiple();
	},

	type: 'SamPublisherCalculatorIBM',
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-10 15:54:35</sys_created_on>
        <sys_id>51d5a96c47111110c859fee3846d43fe</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SamPublisherCalculatorIBM</sys_name>
        <sys_package display_value="SAM Scripts" source="x_807586_sam_scrip">23a2a1a047111110c859fee3846d4358</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="SAM Scripts">23a2a1a047111110c859fee3846d4358</sys_scope>
        <sys_update_name>sys_script_include_51d5a96c47111110c859fee3846d43fe</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-10 15:54:35</sys_updated_on>
    </sys_script_include>
</record_update>
